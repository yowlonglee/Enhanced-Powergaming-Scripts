///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//Initializes stats for Enhanced Powergaming Scripts - BGII: EE and EET  //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

/*************************************************************************/
///////////////////////////////////////////////////////////////////////////
// Subtledoctor provided the following baseline code to assist in 
// creating new Spellstates to the splstate.ids file:
//
// ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SPELLSTATE_NAME~)) BEGIN
// 	  COPY_EXISTING ~splstate.ids~ ~override~
// 		COUNT_2DA_COLS cols
// 		READ_2DA_ENTRIES_NOW rows cols
// 		FOR (row = 1; row < rows; ++row) BEGIN
// 		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
// 		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
// 		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SPELLSTATE_NAME~) BEGIN
// 			SET splst_nm = %state_ind%
// 		  END
// 		END
// 	  BUT_ONLY
// 	END
// 
// 	ACTION_IF !(VARIABLE_IS_SET %splst_nm%) BEGIN
// 		LAF ds_sort_ids STR_VAR ids=splstate END
// 		LAF d5_resolve_state STR_VAR new_state_id = ~SPELLSTATE_NAME~ RET new_state_ind END
// 		OUTER_SET splst_nm = %new_state_ind%
// 	END 
//
// The code above is used throughout to add multiple new Spellstates to the game.
///////////////////////////////////////////////////////////////////////////
/*************************************************************************/

///////////////////////////////////////////////////////////////////////////
// Detectable Spells                                                     //
///////////////////////////////////////////////////////////////////////////
LAF detectable_spells END

///////////////////////////////////////////////////////////////////////////
// Adds States used in AI Scripts                                        //
///////////////////////////////////////////////////////////////////////////
APPEND ~STATE.IDS~ ~0x00000001 STATE_SLEEPING~				      UNLESS ~0x00000001 STATE_SLEEPING~
APPEND ~STATE.IDS~ ~0x00000004 STATE_PANIC~					        UNLESS ~0x00000004 STATE_PANIC~
APPEND ~STATE.IDS~ ~0x00000008 STATE_STUNNED~				        UNLESS ~0x00000008 STATE_STUNNED~
APPEND ~STATE.IDS~ ~0x00000010 STATE_INVISIBLE~				      UNLESS ~0x00000010 STATE_INVISIBLE~
APPEND ~STATE.IDS~ ~0x00000FC0 STATE_REALLY_DEAD~	   	      UNLESS ~0x00000FC0 STATE_REALLY_DEAD~
APPEND ~STATE.IDS~ ~0x00001000 STATE_SILENCED~ 		   	      UNLESS ~0x00001000 STATE_SILENCED~
APPEND ~STATE.IDS~ ~0x00002000 STATE_CHARMED~				        UNLESS ~0x00002000 STATE_CHARMED~
APPEND ~STATE.IDS~ ~0x00004000 STATE_POISONED~ 				      UNLESS ~0x00004000 STATE_POISONED~
APPEND ~STATE.IDS~ ~0x00008000 STATE_HASTED~				        UNLESS ~0x00008000 STATE_HASTED~
APPEND ~STATE.IDS~ ~0x00040000 STATE_BLIND~					        UNLESS ~0x00040000 STATE_BLIND~
APPEND ~STATE.IDS~ ~0x00080000 STATE_DISEASED~				      UNLESS ~0x00080000 STATE_DISEASED~
APPEND ~STATE.IDS~ ~0x00200000 STATE_NONDETECTION~			    UNLESS ~0x00200000 STATE_NONDETECTION~
APPEND ~STATE.IDS~ ~0x00400000 STATE_IMPROVEDINVISIBILITY~	UNLESS ~0x00400000 STATE_IMPROVEDINVISIBILITY~
APPEND ~STATE.IDS~ ~0x00100000 STATE_FEEBLEMINDED~			    UNLESS ~0x00100000 STATE_FEEBLEMINDED~
APPEND ~STATE.IDS~ ~0x00400010 STATE_NOT_TARGETABLE~  		  UNLESS ~0x00400010 STATE_NOT_TARGETABLE~
APPEND ~STATE.IDS~ ~0x00800000 STATE_BLESS~					        UNLESS ~0x00800000 STATE_BLESS~
APPEND ~STATE.IDS~ ~0x02000000 STATE_DRAWUPONHOLYMIGHT~		  UNLESS ~0x02000000 STATE_DRAWUPONHOLYMIGHT~
APPEND ~STATE.IDS~ ~0x40000000 STATE_MIRRORIMAGE~			      UNLESS ~0x40000000 STATE_MIRRORIMAGE~
APPEND ~STATE.IDS~ ~0x80000000 STATE_CONFUSED~				      UNLESS ~0x80000000 STATE_CONFUSED~
APPEND ~STATE.IDS~ ~0x8010202D STATE_DISABLED~	       		  UNLESS ~0x8010202D STATE_DISABLED~
APPEND ~STATE.IDS~ ~0x80002006 STATE_NOT_APPROACHABLE~		  UNLESS ~0x80002006 STATE_NOT_APPROACHABLE~

///////////////////////////////////////////////////////////////////////////
// Adds Stats used in AI Scripts                                        //
///////////////////////////////////////////////////////////////////////////
APPEND ~stats.ids~ ~110 CLERIC_ARMOR_OF_FAITH~                  UNLESS ~110 CLERIC_ARMOR_OF_FAITH~
APPEND ~stats.ids~ ~116 WIZARD_SPELL_DEFLECTION~                UNLESS ~116 WIZARD_SPELL_DEFLECTION~
APPEND ~stats.ids~ ~117 PROTECTION_FROM_EVIL~                   UNLESS ~117 PROTECTION_FROM_EVIL~
APPEND ~stats.ids~ ~118 TRUE_SIGHT~                             UNLESS ~118 TRUE_SIGHT~
APPEND ~stats.ids~ ~119 CLERIC_CHAOTIC_COMMANDS~                UNLESS ~119 CLERIC_CHAOTIC_COMMANDS~
APPEND ~stats.ids~ ~120 CLERIC_INSECT_PLAGUE~                   UNLESS ~120 CLERIC_INSECT_PLAGUE~
APPEND ~stats.ids~ ~121 CLERIC_BLADE_BARRIER~                   UNLESS ~121 CLERIC_BLADE_BARRIER~
APPEND ~stats.ids~ ~122 CLERIC_PHYSICAL_MIRROR~                 UNLESS ~122 CLERIC_PHYSICAL_MIRROR~
APPEND ~stats.ids~ ~123 CLERIC_SHIELD_OF_THE_ARCHONS~           UNLESS ~123 CLERIC_SHIELD_OF_THE_ARCHONS~
APPEND ~stats.ids~ ~124 CLERIC_REGENERATION~                    UNLESS ~124 CLERIC_REGENERATION~
APPEND ~stats.ids~ ~125 WIZARD_FIRE_SHIELD~                     UNLESS ~125 WIZARD_FIRE_SHIELD~
APPEND ~stats.ids~ ~126 WIZARD_PROTECTION_FROM_MAGIC_ENERGY~    UNLESS ~126 WIZARD_PROTECTION_FROM_MAGIC_ENERGY~
APPEND ~stats.ids~ ~127 WIZARD_MISLEAD~                         UNLESS ~127 WIZARD_MISLEAD~
APPEND ~stats.ids~ ~128 WIZARD_PROTECTION_FROM_MAGIC_WEAPONS~   UNLESS ~128 WIZARD_PROTECTION_FROM_MAGIC_WEAPONS~
APPEND ~stats.ids~ ~129 WIZARD_SPELL_TURNING~                   UNLESS ~129 WIZARD_SPELL_TURNING~
APPEND ~stats.ids~ ~130 WIZARD_PROTECTION_FROM_THE_ELEMENTS~    UNLESS ~130 WIZARD_PROTECTION_FROM_THE_ELEMENTS~
APPEND ~stats.ids~ ~131 CLERIC_FREE_ACTION~                     UNLESS ~131 CLERIC_FREE_ACTION~
APPEND ~stats.ids~ ~132 WIZARD_KHELBENS_WARDING_WHIP~           UNLESS ~132 WIZARD_KHELBENS_WARDING_WHIP~
APPEND ~stats.ids~ ~133 CLERIC_DEFENSIVE_HARMONY~               UNLESS ~133 CLERIC_DEFENSIVE_HARMONY~
APPEND ~stats.ids~ ~161 SCRIPTINGSTATE6~                        UNLESS ~161 SCRIPTINGSTATE6~
APPEND ~stats.ids~ ~162 WIZARD_SPELL_IMMUNITY~                  UNLESS ~162 WIZARD_SPELL_IMMUNITY~
APPEND ~stats.ids~ ~163 WIZARD_PROTECTION_FROM_ENERGY~          UNLESS ~163 WIZARD_PROTECTION_FROM_ENERGY~
APPEND ~stats.ids~ ~164 WIZARD_SPELL_TRAP~                      UNLESS ~164 WIZARD_SPELL_TRAP~
APPEND ~stats.ids~ ~165 WIZARD_IMPROVED_ALACRITY~               UNLESS ~165 WIZARD_IMPROVED_ALACRITY~
APPEND ~stats.ids~ ~176 WIZARD_PROTECTION_FROM_PETRIFICATION~   UNLESS ~176 WIZARD_PROTECTION_FROM_PETRIFICATION~
APPEND ~stats.ids~ ~177 WIZARD_SPELL_SHIELD~                    UNLESS ~177 WIZARD_SPELL_SHIELD~
APPEND ~stats.ids~ ~178 WIZARD_RESIST_FEAR~                     UNLESS ~178 WIZARD_RESIST_FEAR~
APPEND ~stats.ids~ ~179 WIZARD_PROTECTION_FROM_NORMAL_MISSILES~ UNLESS ~179 WIZARD_PROTECTION_FROM_NORMAL_MISSILES~
APPEND ~stats.ids~ ~180 WIZARD_GREATER_MALISON~                 UNLESS ~180 WIZARD_GREATER_MALISON~
APPEND ~stats.ids~ ~181 WIZARD_PROTECTION_FROM_NORMAL_WEAPONS~  UNLESS ~181 WIZARD_PROTECTION_FROM_NORMAL_WEAPONS~
APPEND ~stats.ids~ ~182 WIZARD_TENSERS_TRANSFORMATION~          UNLESS ~182 WIZARD_TENSERS_TRANSFORMATION~

///////////////////////////////////////////////////////////////////////////
// Adds Classes used in AI Scripts                                       //
///////////////////////////////////////////////////////////////////////////
APPEND ~class.ids~ ~223 WIGHT~                  				UNLESS ~223 WIGHT~

///////////////////////////////////////////////////////////////////////////
// Adds Raceses used in AI Scripts                                       //
///////////////////////////////////////////////////////////////////////////
APPEND ~race.ids~ ~163 MUMMY~		                            UNLESS ~163 MUMMY~

///////////////////////////////////////////////////////////////////////////
// Adds Action to Swap Items in AI Scripts                               //
///////////////////////////////////////////////////////////////////////////
APPEND ~action.ids~ ~34 UseItemAbility(S:Object*,O:Target*,I:Slot*SLOTS,I:Ability*)~ UNLESS ~34 UseItemAbility(S:Object*,O:Target*,I:Slot*SLOTS,I:Ability*)~

///////////////////////////////////////////////////////////////////////////
// Adds Race used in AI Scripts                                          //
///////////////////////////////////////////////////////////////////////////
APPEND ~race.ids~ ~163 MUMMY~ UNLESS ~163 MUMMY~

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Assign Spell State for Wild and Dead Magic Areas                      //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
///////////////////////////////////////////////////////////////////////////
// Assign Spell State for Wild Magic Area                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WILD_MAGIC_AREA~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WILD_MAGIC_AREA~) BEGIN
			SET wld_mgc_ar = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %wld_mgc_ar%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~WILD_MAGIC_AREA~ RET new_state_ind END
		OUTER_SET wld_mgc_ar = %new_state_ind%
	END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WILD_MAGIC_AREA~ RET spell_res END
	COPY_EXISTING ~%spell_res%.spl~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 280 opcode = 328 parameter2 = %wld_mgc_ar% special = 1 END

///////////////////////////////////////////////////////////////////////////
// Assign Spell State for Dead Magic Area                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~DEAD_MAGIC_AREA~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~DEAD_MAGIC_AREA~) BEGIN
			SET ded_mgc_ar = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %ded_mgc_ar%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~DEAD_MAGIC_AREA~ RET new_state_ind END
		OUTER_SET ded_mgc_ar = %new_state_ind%
	END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~DEAD_MAGIC_AREA~ RET spell_res END
	COPY_EXISTING ~%spell_res%.spl~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 142 opcode = 328 parameter2 = %ded_mgc_ar% special = 1 END
END

/*
///////////////////////////////////////////////////////////////////////////
// Add Web Spellstate                                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WEB~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WEB~) BEGIN
			SET web = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %web%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~WEB~ RET new_state_ind END
		OUTER_SET web = %new_state_ind%
	END

	ACTION_FOR_EACH web_list IN
				WIZARD_WEB
				FIGURINE_SPIDER_WEB
				MIMIC_WEB
				INNATE_SPIDER_WEB
			BEGIN
				LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%web_list%~ RET spell_res END
				ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
					COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
   					LPF CLONE_EFFECT INT_VAR match_opcode = 157 opcode = 328 parameter2 = %web% special = 1 END
				END
	END
	*/

///////////////////////////////////////////////////////////////////////////
// Update Regeneration Skills                                            //
///////////////////////////////////////////////////////////////////////////
ACTION_IF NOT sd_combat_skills BEGIN
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~CLERIC_REGENERATION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~CLERIC_REGENERATION~) BEGIN
			SET regen = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %regen%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~CLERIC_REGENERATION~ RET new_state_ind END
		OUTER_SET regen = %new_state_ind%
	END

	COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ ~override~
		GET_OFFSET_ARRAY ab_array SPL_V10_HEADERS
		SET remove_this = 0
		PHP_EACH ab_array AS int => ab_off BEGIN
			GET_OFFSET_ARRAY2 fx_array ab_off SPL_V10_HEAD_EFFECTS
			PHP_EACH fx_array AS int => fx_off BEGIN
				READ_SHORT fx_off fx_type
			  	READ_SHORT (fx_off + 0x08) fx_prof
			  	PATCH_IF (fx_type = 233) AND (fx_prof = 124) BEGIN
			    	SET remove_this = 1
			  	END
			END
		END
		PATCH_IF (remove_this = 1) BEGIN
			LPF CLONE_EFFECT INT_VAR match_opcode = 233 match_parameter2 = 124 opcode = 328 parameter2 = %regen% special = 1 END
		END
	BUT_ONLY

	/* NOT REALLY NEEDED NOR CHECKED IN AI. Saving in case I want to do something with it.
	COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
		GET_OFFSET_ARRAY ab_array ITM_V10_HEADERS
	  	PHP_EACH ab_array AS int => ab_off BEGIN
			GET_OFFSET_ARRAY2 fx_array ab_off ITM_V10_HEAD_EFFECTS
			PHP_EACH fx_array AS int => fx_off BEGIN
		  		READ_SHORT fx_off fx_type
		  		READ_SHORT (fx_off + 0x08) fx_prof
		  		PATCH_IF (fx_type = 233) AND (fx_prof = 124) BEGIN
		    		SET remove_this = 1
		  		END
			END
	  	END
	  	PATCH_IF (remove_this = 1) BEGIN
			LPF ALTER_EFFECT INT_VAR match_opcode = 233 match_parameter2 = 124 opcode = 328 parameter2 = %regen% special = 1 END
		END
	BUT_ONLY
	*/
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for PnP Celestials                            //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF pnp_celestial BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Resist Cold                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RESIST_COLD~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RESIST_COLD~) BEGIN
			SET rst_cold = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rst_cold%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RESIST_COLD~ RET new_state_ind END
		OUTER_SET rst_cold = %new_state_ind%
	END

	COPY_EXISTING ~CA#RCOLD.SPL~ ~override~ 
   		LPF CLONE_EFFECT INT_VAR match_opcode = 28 opcode = 328 parameter2 = %rst_cold% special = 1 END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for Spell Revisions                           //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF spell_revisions BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Dispel Screen                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~DISPEL_SCREEN~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~DISPEL_SCREEN~) BEGIN
			SET disp_screen = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %dis_screen%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~DISPEL_SCREEN~ RET new_state_ind END
		OUTER_SET disp_screen = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Minor Spell Deflection                         //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MINOR_SPELL_DEFLECTION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MINOR_SPELL_DEFLECTION~) BEGIN
			SET min_spl_def = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %min_spl_def%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MINOR_SPELL_DEFLECTION~ RET new_state_ind END
		OUTER_SET min_spl_def = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Spell Deflection                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SPELL_DEFLECTION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SPELL_DEFLECTION~) BEGIN
			SET spl_def = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %spl_def%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~SPELL_DEFLECTION~ RET new_state_ind END
		OUTER_SET spl_def = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Greater Spell Deflection                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~GREATER_SPELL_DEFLECTION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~GREATER_SPELL_DEFLECTION~) BEGIN
			SET gtr_spl_def = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %gtr_spl_def%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~GREATER_SPELL_DEFLECTION~ RET new_state_ind END
		OUTER_SET gtr_spl_def = %new_state_ind%
	END

/*
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Mestil's Acid Sheath                           //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~ACID_SHEATH~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~ACID_SHEATH~) BEGIN
			SET acd_sheath = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %acd_sheath%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~ACID_SHEATH~ RET new_state_ind END
		OUTER_SET acd_sheath = %new_state_ind%
	END
*/

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Mind Blank                                     //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MIND_BLANK~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MIND_BLANK~) BEGIN
			SET mnd_blnk = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mnd_blnk%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MIND_BLANK~ RET new_state_ind END
		OUTER_SET mnd_blnk = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for True Strike                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~TRUE_STRIKE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~TRUE_STRIKE~) BEGIN
			SET tru_strk = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %tru_strk%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~TRUE_STRIKE~ RET new_state_ind END
		OUTER_SET tru_strk = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Neutralize Poison                              //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~NEUTRALIZE_POISON~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~NEUTRALIZE_POISON~) BEGIN
			SET ntr_psn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %ntr_psn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~NEUTRALIZE_POISON~ RET new_state_ind END
		OUTER_SET ntr_psn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Strength of One                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~STRENGTH_OF_ONE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~STRENGTH_OF_ONE~) BEGIN
			SET str_one = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %str_one%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~STRENGTH_OF_ONE~ RET new_state_ind END
		OUTER_SET str_one = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Wizard Shield                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WIZARD_SHIELD~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WIZARD_SHIELD~) BEGIN
			SET wzd_shld = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %wzd_shld%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~WIZARD_SHIELD~ RET new_state_ind END
		OUTER_SET wzd_shld = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Haste                                          //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~HASTE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~HASTE~) BEGIN
			SET haste = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %haste%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~HASTE~ RET new_state_ind END
		OUTER_SET haste = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Improved Haste                                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~IMPROVED_HASTE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~IMPROVED_HASTE~) BEGIN
			SET imp_haste = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %imp_haste%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~IMPROVED_HASTE~ RET new_state_ind END
		OUTER_SET imp_haste = %new_state_ind%
	END

/*
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Spell Turning                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF pnp_celestial BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SPELL_TURNING~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SPELL_TURNING~) BEGIN
				SET spl_trn = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %spl_trn%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~SPELL_TURNING~ RET new_state_ind END
			OUTER_SET spl_trn = %new_state_ind%
		END

		COPY_EXISTING ~CA#STURN.SPL~ ~override~ 
			LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %spl_trn% special = 1 END
	END
*/

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Assign Spell States or Stats to Spells                                //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Dispel Screen                                      //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~K1#SCRE.SPL~ ~override~ 
   		LPF CLONE_EFFECT INT_VAR match_opcode = 206 opcode = 328 parameter2 = %disp_screen% special = 1 END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Minor Spell Deflection                             //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MINOR_SPELL_DEFLECTION~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %min_spl_def% timing = 0 duration = 300 END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW318.SPL~ BEGIN
			COPY_EXISTING ~DWSW318.SPL~ ~override~ 
			  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %min_spl_def% timing = 0 duration = 300 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Spell Deflection                                   //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_SPELL_DEFLECTION~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %spl_def% timing = 0 duration = 300 END
	END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW522.SPL~ BEGIN
			COPY_EXISTING ~DWSW522.SPL~ ~override~ 
			  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %spl_def% timing = 0 duration = 300 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Greater Spell Deflection                           //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_GREATER_SPELL_DEFLECTION~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %gtr_spl_def% timing = 0 duration = 300 END
	END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW701.SPL~ BEGIN
			COPY_EXISTING ~DWSW701.SPL~ ~override~ 
			  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %gtr_spl_def% timing = 0 duration = 300 END
		END
	END

	ACTION_IF FILE_EXISTS_IN_GAME ~CA#STURN.SPL~ BEGIN
		COPY_EXISTING ~CA#STURN.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %gtr_spl_def% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to PfMW                                               //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_PROTECTION_FROM_MAGIC_WEAPONS~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = 120 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Prismatic Mantle                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF NOT d5_tweak_mantle BEGIN // Will not add if d5 Tweak Mantle is installed
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MANTLE~ RET spell_res END
		ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = 121 special = 1 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Moment of Prescience                               //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MOMENT_OF_PRESCIENCE~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = 122 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Absolute Immunity                                  //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_ABSOLUTE_IMMUNITY~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = 123 special = 1 END
	END

/*
///////////////////////////////////////////////////////////////////////////
// Add Spell State to Mestil's Acid Sheath                               //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MESTILS_ACID_SHEATH~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.spl~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %acd_sheath% special = 1 END
	END
*/

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Spell Shield                                       //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_SPELL_SHIELD~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = 108 timing = 0 duration = 300 END
	END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW519.SPL~ BEGIN
			COPY_EXISTING ~DWSW519.SPL~ ~override~ 
			  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = 108 timing = 0 duration = 300 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Bless                                              //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_BLESS~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 130 opcode = 328 parameter2 = 22 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Stat to Protection from Energy                                    //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_PROTECTION_FROM_ENERGY~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 233 parameter2 = 163 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Stat to Spell Trap                                                //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_SPELL_TRAP~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 233 target = 1 special = 1 parameter2 = 164 timing = 0 duration = 108 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Stat to Physical Mirror                                           //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_PHYSICAL_MIRROR~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 233 target = 1 special = 1 parameter2 = 122 timing = 0 duration = 30 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Stat to Negative Plane Protection                                 //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_NEGATIVE_PLANE_PROTECTION~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 233 parameter2 = 158 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Mind Blank                                         //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MIND_BLANK~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		ACTION_IF !scs_breach BEGIN
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 328 opcode = 328 parameter2 = %mnd_blnk% special = 1 END
			  OUTER_SET set_mind_blank=1
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to True Strike                                        //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_TRUE_STRIKE~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		ACTION_IF !scs_breach BEGIN
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 278 opcode = 328 parameter2 = %tru_strk% special = 1 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Neutralize Poison                                  //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_NEUTRALIZE_POISON~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 101 opcode = 328 parameter2 = %ntr_psn% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Strength of One                                    //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_STRENGTH_OF_ONE~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %str_one% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Wizard Shield                                      //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_SHIELD~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	   		LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %wzd_shld% special = 1 END
   	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Haste                                              //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_HASTE~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 1 opcode = 328 parameter2 = %haste% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Improved Haste                                     //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_IMPROVED_HASTE~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 1 opcode = 328 parameter2 = %imp_haste% special = 1 END
	END

END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for IWD Spells                                //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF iwdification BEGIN

	ACTION_IF !scs_breach BEGIN
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Mind Blank                                     //
///////////////////////////////////////////////////////////////////////////
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MIND_BLANK~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MIND_BLANK~) BEGIN
				SET mnd_blnk = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %mnd_blnk%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~MIND_BLANK~ RET new_state_ind END
			OUTER_SET mnd_blnk = %new_state_ind%
		END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Mind Blank                                         //
///////////////////////////////////////////////////////////////////////////
		ACTION_IF !VARIABLE_IS_SET ~set_mind_blank~ BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MIND_BLANK~ RET spell_res END
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 106 opcode = 328 parameter2 = %mnd_blnk% special = 1 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Shield of Lathander                            //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SHIELD_OF_LATHANDER~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SHIELD_OF_LATHANDER~) BEGIN
			SET shld_lath = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %shld_lath%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~SHIELD_OF_LATHANDER~ RET new_state_ind END
		OUTER_SET shld_lath = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create and Assign Spell State for Emotion, Courage                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~EMOTION_COURAGE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~EMOTION_COURAGE~) BEGIN
			SET emt_crg = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %emt_crg%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~EMOTION_COURAGE~ RET new_state_ind END
		OUTER_SET emt_crg = %new_state_ind%

		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_EMOTION_COURAGE~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  		LPF CLONE_EFFECT INT_VAR match_opcode = 54 opcode = 328 parameter2 = %emt_crg% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Create and Assign Spell State for Emotion, Hope                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~EMOTION_HOPE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~EMOTION_HOPE~) BEGIN
			SET emt_hpe = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %emt_hpe%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~EMOTION_HOPE~ RET new_state_ind END
		OUTER_SET emt_hpe = %new_state_ind%

		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_EMOTION_HOPE~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  		LPF CLONE_EFFECT INT_VAR match_opcode = 325 opcode = 328 parameter2 = %emt_hpe% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Assign Spell States or Stats to Spells (IWD)                          //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Shield of Lathander                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_FOR_EACH spell IN
			GREATER_SHIELD_OF_LATHANDER
			SHIELD_OF_LATHANDER
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_%spell%~ RET spell_res END
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
				LPF CLONE_EFFECT INT_VAR match_opcode = 142 opcode = 328 parameter2 = %shld_lath% special = 1 END
		END

END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for Spells                                    //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Minor Globe of Invulnerability                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MINOR_GLOBE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MINOR_GLOBE~) BEGIN
			SET mnr_glb = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mnr_glb%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MINOR_GLOBE~ RET new_state_ind END
		OUTER_SET mnr_glb = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Globe of Invulnerability                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~GLOBE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~GLOBE~) BEGIN
			SET glb = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %glb%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~GLOBE~ RET new_state_ind END
		OUTER_SET glb = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Greater Whirlwind                              //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ OR battle_master BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~GREATER_WHIRLWIND~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~GREATER_WHIRLWIND~) BEGIN
				SET gtr_whirl = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %gtr_whirl%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~GREATER_WHIRLWIND~ RET new_state_ind END
			OUTER_SET gtr_whirl = %new_state_ind%
		END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Critical Strike                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~CRITICAL_STRIKE~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~CRITICAL_STRIKE~) BEGIN
				SET ctr_strk = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %ctr_strk%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~CRITICAL_STRIKE~ RET new_state_ind END
			OUTER_SET ctr_strk = %new_state_ind%
		END
	END

ACTION_IF saa_hla BEGIN
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Resist Magic                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RESIST_MAGIC~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RESIST_MAGIC~) BEGIN
				SET rst_mgc = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %rst_mgc%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~RESIST_MAGIC~ RET new_state_ind END
			OUTER_SET rst_mgc = %new_state_ind%
		END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for War Cry                                        //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WAR_CRY~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WAR_CRY~) BEGIN
				SET war_cry = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %war_cry%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~WAR_CRY~ RET new_state_ind END
			OUTER_SET war_cry = %new_state_ind%
		END
	END
END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Shock Weapon                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF stormlord BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SHOCK_WEAPON~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SHOCK_WEAPON~) BEGIN
				SET shk_wnp = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %shk_wnp%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~SHOCK_WEAPON~ RET new_state_ind END
			OUTER_SET shk_wnp = %new_state_ind%
		END

		COPY_EXISTING ~MOSTL02.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %shk_wnp% special = 1 END
	END

/*
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Negative Plane Protection                      //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~LEVEL_DRAIN_IMMUNITY~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~LEVEL_DRAIN_IMMUNITY~) BEGIN
			SET lvl_drn_immun = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %lvl_drn_immun%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~LEVEL_DRAIN_IMMUNITY~ RET new_state_ind END
		OUTER_SET lvl_drn_immun = %new_state_ind%
	END
*/

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Righteous Magic                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RIGHTEOUS_MAGIC~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RIGHTEOUS_MAGIC~) BEGIN
			SET rght_mgc = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rght_mgc%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RIGHTEOUS_MAGIC~ RET new_state_ind END
		OUTER_SET rght_mgc = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Spell Protections                     //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_SPELL_PROT~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_SPELL_PROT~) BEGIN
			SET rmv_spl_prt = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_spl_prt%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_SPELL_PROT~ RET new_state_ind END
		OUTER_SET rmv_spl_prt = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Spell Protections                     //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_SPELL_PROT_TWO~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_SPELL_PROT_TWO~) BEGIN
			SET rmv_spl_prt2 = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_spl_prt2%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_SPELL_PROT_TWO~ RET new_state_ind END
		OUTER_SET rmv_spl_prt2 = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Combat Protections                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_COMBAT_PROT~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_COMBAT_PROT~) BEGIN
			SET rmv_cbt_prt = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_cbt_prt%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_COMBAT_PROT~ RET new_state_ind END
		OUTER_SET rmv_cbt_prt = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Poisons                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_POISON~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_POISON~) BEGIN
			SET rmv_psn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_psn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_POISON~ RET new_state_ind END
		OUTER_SET rmv_psn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Restoration Spells                             //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RESTORATION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RESTORATION~) BEGIN
			SET rest = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rest%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RESTORATION~ RET new_state_ind END
		OUTER_SET rest = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Disease                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_DISEASE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_DISEASE~) BEGIN
			SET rmv_ds = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_ds%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_DISEASE~ RET new_state_ind END
		OUTER_SET rmv_ds = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Grab Protection from Magical Weapons Spellstate                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PROTECTION_FROM_MAGICAL_WEAPONS~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PROTECTION_FROM_MAGICAL_WEAPONS~) BEGIN
			SET prt_mg_wpn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %prt_mg_wpn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PROTECTION_FROM_MAGICAL_WEAPONS~ RET new_state_ind END
		OUTER_SET prt_mg_wpn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Black Blade of Disaster                        //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~BLACK_BLADE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~BLACK_BLADE~) BEGIN
			SET blk_bld = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %blk_bld%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~BLACK_BLADE~ RET new_state_ind END
		OUTER_SET blk_bld = %new_state_ind%
	END

/*
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Casting a Spell                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~CASTING_SPELL~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~CASTING_SPELL~) BEGIN
			SET cst_spl = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %cst_spl%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~CASTING_SPELL~ RET new_state_ind END
		OUTER_SET cst_spl = %new_state_ind%
	END
*/

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Wizard Armor                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MAGE_ARMOR~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MAGE_ARMOR~) BEGIN
			SET mag_armor = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mag_armor%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MAGE_ARMOR~ RET new_state_ind END
		OUTER_SET mag_armor = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Enhanced Bard Song                             //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~ENHANCED_BARD_SONG~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~ENHANCED_BARD_SONG~) BEGIN
				SET enh_brd_sng = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %enh_brd_sng%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~ENHANCED_BARD_SONG~ RET new_state_ind END
			OUTER_SET enh_brd_sng = %new_state_ind%
		END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Invoke Courage                                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		/*
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~INVOKE_COURAGE~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~INVOKE_COURAGE~) BEGIN
				SET invk_crg = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %invk_crg%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~INVOKE_COURAGE~ RET new_state_ind END
			OUTER_SET invk_crg = %new_state_ind%
		END
		*/

		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~INVOKE_COURAGE~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 284 opcode = 328 parameter2 = 106 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Needing Improved Haste                         //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~NEED_IMPROVED_HASTE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~NEED_IMPROVED_HASTE~) BEGIN
			SET nd_hst = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %nd_hst%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~NEED_IMPROVED_HASTE~ RET new_state_ind END
		OUTER_SET nd_hst = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Assign Spell States or Stats to Spells                                //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Minor Globe of Invulnerability                     //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 155 opcode = 328 parameter2 = %mnr_glb% special = 1 END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW406.SPL~ BEGIN
			COPY_EXISTING ~DWSW406.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 155 opcode = 328 parameter2 = %mnr_glb% special = 1 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Globe of Invulnerability                           //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_GLOBE_OF_INVULNERABILITY~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 155 opcode = 328 parameter2 = %glb% special = 1 END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW602.SPL~ BEGIN
			COPY_EXISTING ~DWSW602.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 155 opcode = 328 parameter2 = %glb% special = 1 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Greater Whirlwind                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_GREATER_WHIRLWIND~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %gtr_whirl% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Critical Strike                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_CRITICAL_STRIKE~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %ctr_strk% special = 1 END
	END

ACTION_IF saa_hla BEGIN
///////////////////////////////////////////////////////////////////////////
// Add Spell State to Resist Magic                                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_RESIST_MAGIC~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 166 opcode = 328 parameter2 = %rst_mgc% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to War Cry                                            //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_WAR_CRY~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %war_cry% special = 1 END
	END
END 

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Relentless Assault                                 //
///////////////////////////////////////////////////////////////////////////
ACTION_IF battle_master BEGIN
	COPY_EXISTING ~mobtm01.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 317 opcode = 328 parameter2 = %gtr_whirl% special = 1 END
END

/*
///////////////////////////////////////////////////////////////////////////
// Add Spell State to Negative Plane Protection                          //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_NEGATIVE_PLANE_PROTECTION~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %lvl_drn_immun% special = 1 END
*/

///////////////////////////////////////////////////////////////////////////
// Add Stat to Negative Plane Protection                                 //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_NEGATIVE_PLANE_PROTECTION~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 233 parameter2 = 158 special = 1 END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Righteous Magic                                    //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_RIGHTEOUS_MAGIC~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %rght_mgc% special = 1 END

///////////////////////////////////////////////////////////////////////////
// Add State to track when Dispelling Spell Protections                  //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mosprt.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_spl_prt% timing = 0 duration = 6 END

	COPY ~enhanced-powergaming-scripts/spl/mosprt.spl~ ~override/mosprt2.spl~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_spl_prt2% timing = 0 duration = 6 END

	// mosprt removal
	ACTION_FOR_EACH spell IN
			SPELL_THRUST
			SECRET_WORD
			PIERCE_MAGIC
			WARDING_WHIP
			RUBY_RAY_OF_REVERSAL
			PIERCE_SHIELD
			SPELL_STRIKE
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_%spell%~ RET spell_res END
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOSPRT" END // remo
		END

	// mosprt2 removal
	ACTION_FOR_EACH spell_two IN
			SPELL_STRIKE
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_%spell_two%~ RET spell_res END
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOSPRT2" END
		END

	// FP Spheres 
	ACTION_IF fp_spheres BEGIN
		ACTION_FOR_EACH spell IN
				D5F2321
				D5P2321
				D5F2419
				D5P2419
			BEGIN
				COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOSPRT" END
			END
	END

//////////////////////////////////////////////////////////////////////////
// Add State to track when Dispelling Combat Protections                //
//////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mocprt.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_cbt_prt% timing = 0 duration = 6 END

	// Breach
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_BREACH~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 insert_point = 0 STR_VAR resource = "MOCPRT" END

	// SR Pierce Shield
	ACTION_IF spell_revisions BEGIN
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_PIERCE_SHIELD~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 insert_point = 0 STR_VAR resource = "MOCPRT" END
	END

	// Ranger Breach
	ACTION_IF fp_ranger BEGIN
		COPY_EXISTING ~D5_RABRE.SPL~ ~override~ 
	  	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 insert_point = 0 STR_VAR resource = "MOCPRT" END
	END

///////////////////////////////////////////////////////////////////////////
// Add State to track when Removing Poisons                              //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mopois.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_psn% timing = 0 duration = 6 END

	ACTION_FOR_EACH poison_spell IN
			SPIN102 // Innate - Slow Poison
			SPIN201 // Innate - Neutralize Poison
			SPPR212 // Slow Poison
			SPPR404 // Neutralize Poison
			D5F1212 // FP - Slow Poison
			D5P1212 // FP - Slow Poison
			D5F1404 // FP - Neutralize Poison
			D5P1404 // FP - Neutralize Poison
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%poison_spell%.SPL~ BEGIN
				COPY_EXISTING ~%poison_spell%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOPOIS" END
			END
		END

	ACTION_FOR_EACH poison_item IN
			POTN17 // Elixir of Health
			POTN20 // Antidote
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%poison_item%.ITM~ BEGIN
				COPY_EXISTING ~%poison_item%.ITM~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOPOIS" END
			END
		END

///////////////////////////////////////////////////////////////////////////
// Add State to track when using Restoration Spells                      //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/morest.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rest% timing = 0 duration = 6 END

	ACTION_FOR_EACH restoration_spell IN
			CLERIC_LESSER_RESTORATION
			CLERIC_RESTORATION
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%restoration_spell%~ RET spell_res END
			ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
				COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOREST" END
			END
		END

	ACTION_IF FILE_EXISTS_IN_GAME ~CA#RESTO.SPL~ BEGIN
		COPY_EXISTING ~CA#RESTO.SPL~ ~override~ 
			LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOREST" END
	END

///////////////////////////////////////////////////////////////////////////
// Add State to track when Removing Diseases                             //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mopois.spl~ ~override/mormvds.spl~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_ds% timing = 0 duration = 6 END

	ACTION_FOR_EACH disease_spell IN
			CA#CDISE
			CA#CUDIS
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%disease_spell%.SPL~ BEGIN
				COPY_EXISTING ~%disease_spell%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MORMVDS" END
			END
		END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_CURE_DISEASE~ RET spell_res END
	//PATCH_PRINT ~Adding Spell Penetration to: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
			LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MORMVDS" END
	END

	ACTION_FOR_EACH disease_item IN
			POTN17 // Elixir of Health
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%disease_item%.ITM~ BEGIN
				COPY_EXISTING ~%disease_item%.ITM~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MORMVDS" END
			END
		END

///////////////////////////////////////////////////////////////////////////
// Assign Protection from Magical Weapons Spellstate                     //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~SPIN686.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %prt_mg_wpn% special = 1 END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Black Blade of Disaster                            //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_BLACK_BLADE_OF_DISASTER~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 111 opcode = 328 parameter2 = %blk_bld% special = 1 END

/*
///////////////////////////////////////////////////////////////////////////
// Add Spell State to ALL Spells showing Casting Spell                   //
///////////////////////////////////////////////////////////////////////////
	  COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ ~override~
	  	LPF ADD_SPELL_CFEFFECT INT_VAR opcode = 328 target = 1 timing = 0 parameter2 = %cst_spl% duration = 6 special = 1 END
	  	BUT_ONLY
*/

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Wizard Armors                                      //
///////////////////////////////////////////////////////////////////////////
	ACTION_FOR_EACH armor IN
			ARMOR
			GHOST_ARMOR
			SPIRIT_ARMOR
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_%armor%~ RET spell_res END
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
				LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %mag_armor% special = 1 END
		END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to for Enhanced Bard Song                             //
///////////////////////////////////////////////////////////////////////////
ACTION_IF GAME_IS ~bg2ee eet~ BEGIN
	ACTION_FOR_EACH bard_song IN
				SPCL920 	// Vanilla Enhanced Bard Song
				RR#BDF03  // Rogue Rebalancing Enhanced Bard Song
			BEGIN
				ACTION_IF FILE_EXISTS_IN_GAME ~%bard_song%.SPL~ BEGIN
					COPY_EXISTING ~%bard_song%.SPL~ ~override~ 
						LPF CLONE_EFFECT INT_VAR match_opcode = 251 opcode = 328 parameter2 = %enh_brd_sng% special = 1 END
				END
			END
END

///////////////////////////////////////////////////////////////////////////
// Add State to track when a character needs Improved Haste              //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/monhst1.spl~ ~override~ // add call the char needs IH
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %nd_hst% timing = 1 END

	COPY ~enhanced-powergaming-scripts/spl/monhst2.spl~ ~override~ // removes the call signifying the character does NOT need IH
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 parameter2 = 0 timing = 0 probability1 = 100 STR_VAR resource = ~monhst1~ END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for DSotSC Spells                             //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF dsotsc_arcane BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Army of One                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~ARMY_OF_ONE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~ARMY_OF_ONE~) BEGIN
			SET army_one = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %army_one%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~ARMY_OF_ONE~ RET new_state_ind END
		OUTER_SET army_one = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Army of One                                        //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_ARMY_OF_ONE~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %army_one% timing = 0 duration = 60 END
END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Aura of Protection                             //
///////////////////////////////////////////////////////////////////////////
ACTION_IF dsotsc_divine BEGIN

	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~AURA_OF_PROT~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~AURA_OF_PROT~) BEGIN
			SET aura_prot = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %aura_prot%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~AURA_OF_PROT~ RET new_state_ind END
		OUTER_SET aura_prot = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Aura of Protection                                 //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_AURA_OF_PROTECTION~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %aura_prot% timing = 0 duration = 60 END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Selune's Blessing                                  //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_SELUNES_BLESSING~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %mnr_glb% timing = 0 duration = 60 END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States if Spell Revisions is NOT Installed           //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF !spell_revisions BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Minor Spell Turning                            //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MINOR_SPELL_TURNING~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MINOR_SPELL_TURNING~) BEGIN
			SET mnr_spl_trn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mnr_spl_trn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MINOR_SPELL_TURNING~ RET new_state_ind END
		OUTER_SET mnr_spl_trn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Spell Turning                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SPELL_TURNING~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SPELL_TURNING~) BEGIN
			SET spl_trn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %spl_trn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~SPELL_TURNING~ RET new_state_ind END
		OUTER_SET spl_trn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Minor Spell Turning                                //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MINOR_SPELL_TURNING~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %mnr_spl_trn% special = 1 END

	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW522.SPL~ BEGIN
			COPY_EXISTING ~DWSW522.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %mnr_spl_trn% special = 1 END
		END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Improved Haste                                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~IMPROVED_HASTE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~IMPROVED_HASTE~) BEGIN
			SET imp_haste = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %imp_haste%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~IMPROVED_HASTE~ RET new_state_ind END
		OUTER_SET imp_haste = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Spell Turning                                      //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_SPELL_TURNING~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %spl_trn% special = 1 END

	ACTION_FOR_EACH spl_turn IN
			DWSW701  // SCS
			CA#STURN // PNP Celestials
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%spl_turn%.SPL~ BEGIN
				COPY_EXISTING ~%spl_turn%.SPL~ ~override~ 
					LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %spl_trn% special = 1 END
			END
		END
	
	/*
	ACTION_IF scs_breach BEGIN
		ACTION_IF FILE_EXISTS_IN_GAME ~DWSW701.SPL~ BEGIN
			COPY_EXISTING ~DWSW701.SPL~ ~override~ 
			  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %spl_trn% special = 1 END
		END
	END
	*/
///////////////////////////////////////////////////////////////////////////
// Add Spell State to Improved Haste                                     //
///////////////////////////////////////////////////////////////////////////
	//ACTION_IF scs_spltweak BEGIN
	ACTION_IF FILE_EXISTS_IN_GAME ~SPWI613A.SPL~ BEGIN
		COPY_EXISTING ~SPWI613A.SPL~ ~override~
			LPF CLONE_EFFECT INT_VAR match_opcode = 16 opcode = 328 parameter2 = %imp_haste% special = 1 END
	END ELSE BEGIN
		LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_IMPROVED_HASTE~ RET spell_res END
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 16 opcode = 328 parameter2 = %imp_haste% special = 1 END
	END
END

// Ring of Gaxx
ACTION_IF FILE_EXISTS_IN_GAME ~RING39.ITM~ BEGIN
	COPY_EXISTING ~RING39.ITM~ ~override~ 
		LPF CLONE_EFFECT INT_VAR match_opcode = 16 opcode = 328 parameter2 = %imp_haste% special = 1 END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States if Faith and Powers is Installed              //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

ACTION_IF fp_spheres BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Divine Aura                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF FILE_EXISTS_IN_GAME ~B_PH06.SPL~ BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~DIVINE_AURA~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~DIVINE_AURA~) BEGIN
				SET div_aura = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %div_aura%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~DIVINE_AURA~ RET new_state_ind END
			OUTER_SET div_aura = %new_state_ind%
		END

		COPY_EXISTING ~B_PH06.SPL~ ~override~ 
	  	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %div_aura% timing = 0 duration = 300 END
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Warding Winds                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF FILE_EXISTS_IN_GAME ~B_PH04.SPL~ BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WARDING_WINDS~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WARDING_WINDS~) BEGIN
				SET wrd_wnds = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %wrd_wnds%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~WARDING_WINDS~ RET new_state_ind END
			OUTER_SET wrd_wnds = %new_state_ind%
		END

		COPY_EXISTING ~B_PH04.SPL~ ~override~ 
	  	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %wrd_wnds% timing = 0 duration = 300 END
	END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Add Disease Spellstate if PnP Undead from aTweaks is Installed        //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF pnp_undead BEGIN

///////////////////////////////////////////////////////////////////////////
// Grab Spell State for Diseased                                         //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~DISEASED~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~DISEASED~) BEGIN
			SET disd = %state_ind%
		  END
		END
	  BUT_ONLY
	END

///////////////////////////////////////////////////////////////////////////
// Add Diseased Spell State to Mummy Attacks                             //
///////////////////////////////////////////////////////////////////////////
	// Mummy Attack
	COPY_EXISTING ~FL#MUM.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 142 opcode = 328 parameter2 = %disd% special = 1 END

	// Greater Mummy Attack
	COPY_EXISTING ~FL#GMUM.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 parameter2 = %disd% timing = 0 duration = 360000000 END

END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Add Disease Spellstate if PnP Undead from aTweaks is Installed        //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF scs_golem BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Golem Curse                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~GOLEM_CURSE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~GOLEM_CURSE~) BEGIN
			SET glm_curse = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %glm_curse%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~GOLEM_CURSE~ RET new_state_ind END
		OUTER_SET glm_curse = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Clay Golem Curse Attack                            //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~DW#CURSE.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 parameter2 = %glm_curse% timing = 9 special = 1 END

///////////////////////////////////////////////////////////////////////////
// Add Remove Effects by Resource to Remove Curse                        //
///////////////////////////////////////////////////////////////////////////
// Please note, the Remove Curse Spell already removes the curse, this is to remove the spell tracking on it.

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_REMOVE_CURSE~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 9 STR_VAR resource = "DW#CURSE" END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_REMOVE_CURSE~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 9 STR_VAR resource = "DW#CURSE" END

	ACTION_FOR_EACH spell IN
			CLERIC_REMOVE_CURSE
			WIZARD_REMOVE_CURSE
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%spell%~ RET spell_res END
			COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
				LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 9 STR_VAR resource = "DW#CURSE" END
		END

END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Remove Spell State for Mantle if d5 Tweak Mantle Component            //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
/* Edit the spell directly from the scripts instead
ACTION_IF d5_tweak_mantle BEGIN
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MANTLE~ RET spell_res END
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		LPF DELETE_EFFECT INT_VAR match_opcode = 328 parameter2 = 121 END
END
*/

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for Smite                                     //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF pally_smite OR champion_wild BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Smite                                          //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PALLY_SMITE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PALLY_SMITE~) BEGIN
			SET ply_smt = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %ply_smt%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PALLY_SMITE~ RET new_state_ind END
		OUTER_SET ply_smt = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Paladin Smite                                      //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF FILE_EXISTS_IN_GAME ~MOPALC3.SPL~ BEGIN
		COPY_EXISTING ~MOPALC3.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %ply_smt% timing = 0 duration = 6 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Wrath of the Wild                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF FILE_EXISTS_IN_GAME ~MOCHW03.SPL~ BEGIN
		COPY_EXISTING ~MOCHW03.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %ply_smt% timing = 0 duration = 10 END
	END

END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for Psi Warrior                               //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF psi_warrior BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Psionic Strike                                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PSIONIC_STRIKE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PSIONIC_STRIKE~) BEGIN
			SET psi_strike = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %psi_strike%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PSIONIC_STRIKE~ RET new_state_ind END
		OUTER_SET psi_strike = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Protective Field                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PROTECTIVE_FIELD~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PROTECTIVE_FIELD~) BEGIN
			SET prot_fld = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %prot_fld%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PROTECTIVE_FIELD~ RET new_state_ind END
		OUTER_SET prot_fld = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Psionic Strike                                     //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~MOPSIC2.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %psi_strike% timing = 0 duration = 6 END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Protective Field                                   //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~MOPSIC3.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %prot_fld% timing = 0 duration = 60 END
END

CLEAR_IDS_MAP